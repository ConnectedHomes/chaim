---
  AWSTemplateFormatVersion: 2010-09-09
  Parameters: 
    ChaimCognitoUserPool:
      Type: String
      Description: Chaim Cognito User Pool
    ChaimUser:
      Type: String
      Description: Chaim IAM User
    ChaimUserRole:
      Type: String
      Description: Chaim IAM User Role
    ChaimLambdaRDSRoleName:
      Type: String
      Description: Chaim Lambda RDS Role
    ChaimLambdaKeymanRoleName:
      Type: String
      Description: Chaim Lambda Keyman Role
    Environment:
      Type: String
      Description: The environment the product will be built in
    Owner:
      Type: String
      Description: The owner of the product
    Product:
      Type: String
      Description: The product this stack provides
  Resources:
    ChaimMasterUser:
      Type: AWS::IAM::User
      Properties:
        UserName: !Ref ChaimUser
        ManagedPolicyArns:
          - !Ref ChaimManageAccessKey
          - !Ref ChaimSTSAssumeRole
        Tags:
          - Key: Name
            Value: !Ref ChaimUser
          - Key: Role
            Value: !Ref ChaimUserRole
          - Key: Environment
            Value: !Ref Environment
          - Key: Owner
            Value: !Ref Owner
          - Key: Product
            Value: !Ref Product
      DependsOn: 
        - ChaimManageAccessKey
        - ChaimSTSAssumeRole
    ChaimCognitoManageUser:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: ChaimCognitoManageUser
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            Sid: ChaimCognitoManageUser0
            Effect: Allow
            Action:
              - cognito-idp:AdminDeleteUser
              - cognito-idp:AdminEnableUser
              - cognito-idp:AdminCreateUser
              - cognito-idp:AdminDisableUser
              - cognito-idp:AdminGetUser
              - cognito-idp:ListUser
            Resource:
                - !Ref ChaimCognitoUserPool
    ChaimManageAccessKey:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: ChaimManageAccessKey
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            Sid: ChaimManageAccessKey0
            Effect: Allow
            Action:
              - iam:DeleteAccessKey
              - iam:GetAccessKeyLastUsed
              - iam:UpdateAccessKey
              - iam:GetUser
              - iam:CreateAccessKey
              - iam:ListAccessKeys
            Resource:
              !Sub
                - "arn:aws:iam::${AWS::AccountId}:user/${User}"
                - { User: !Ref ChaimUser }
    ChaimPublishToSNS:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: ChaimPublishToSNS
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            Sid: ChaimPublishToSNS0
            Effect: Allow
            Action: sns:Publish
            Resource:
              - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:chaim-slack-helper"
              - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:ChaimSlackBeta"
              - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:ChaimSlackProd"
              - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:sre-honeypass"
              - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:sre-honeyhub"
              - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:sre-hc-pw-reset"
    ChaimCognitoGetUserStatus:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: ChaimCognitoGetUserStatus
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            Sid: ChaimCognitoGetUserStatus0
            Effect: Allow
            Action:
              - cognito-idp:AdminGetUser
              - cognito-idp:List*
            Resource:
                - !Ref ChaimCognitoUserPool
    ChaimCognitoManageUserPool:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: ChaimCognitoManageUserPool
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            Sid: ChaimCognitoManageUserPool0
            Effect: Allow
            Action:
              - cognito-idp:ListUsersInGroup
              - cognito-idp:ListGroups
              - cognito-idp:AdminListDevices
              - cognito-idp:AdminCreateUser
              - cognito-idp:ListDevices
              - cognito-idp:AdminDisableUser
              - cognito-idp:AdminListGroupsForUser
              - cognito-idp:AdminGetUser
              - cognito-idp:ListUserPoolClients
              - cognito-idp:ListUserImportJobs
            Resource:
                - !Ref ChaimCognitoUserPool
    ChaimSTSAssumeRole:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: ChaimSTSAssumeRole
        PolicyDocument:
          Version: 2012-10-17
          Statement:
              Sid: ChaimSTSAssumeRole0
              Effect: Allow
              Action:
                - sts:GetSessionToken
                - sts:AssumeRole
              Resource: "*"
    ChaimLambdaRDSRole:
      Type: AWS::IAM::Role
      Properties:
        Description: "Chaim Access to IAM, Parameter Store, Cognito and RDS"
        RoleName: !Ref ChaimLambdaRDSRoleName
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
        ManagedPolicyArns:
          - !Ref ChaimPublishToSNS
          - !Ref ChaimCognitoGetUserStatus
          - !Ref ChaimCognitoManageUserPool
          - !Ref ChaimSTSAssumeRole
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        Tags:
          - Key: Name
            Value: !Ref ChaimLambdaRDSRoleName
          - Key: Environment
            Value: !Ref Environment
          - Key: Owner
            Value: !Ref Owner
          - Key: Product
            Value: !Ref Product
      DependsOn:
        - ChaimPublishToSNS
        - ChaimCognitoGetUserStatus
        - ChaimCognitoManageUserPool
        - ChaimSTSAssumeRole
    ChaimLambdaKeymanRole:
      Type: AWS::IAM::Role
      Properties:
        Description: "Chaim Access to IAM, Parameter Store, Cognito and RDS"
        RoleName: !Ref ChaimLambdaKeymanRoleName
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
        ManagedPolicyArns:
          - !Ref ChaimManageAccessKey
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        Tags:
          - Key: Name
            Value: !Ref ChaimLambdaKeymanRoleName
          - Key: Environment
            Value: !Ref Environment
          - Key: Owner
            Value: !Ref Owner
          - Key: Product
            Value: !Ref Product
      DependsOn:
        - ChaimManageAccessKey
  Outputs:
    ChaimCognitoManageUserId: 
      Value: !Ref ChaimCognitoManageUser
    ChaimManageAccessKeyId: 
      Value: !Ref ChaimManageAccessKey
    ChaimPublishToSNSId: 
      Value: !Ref ChaimPublishToSNS
    ChaimCognitoGetUserStatusId: 
      Value: !Ref ChaimCognitoGetUserStatus
    ChaimCognitoManageUserPoolId: 
      Value: !Ref ChaimCognitoManageUserPool
    ChaimSTSAssumeRoleId: 
      Value: !Ref ChaimSTSAssumeRole
    ChaimLambdaRDSRoleId:
      Value: !GetAtt ChaimLambdaRDSRole.Arn
    ChaimLambdaKeymanRoleId:
      Value: !GetAtt ChaimLambdaKeymanRole.Arn
    ChaimMasterUserId: 
      Value: !GetAtt ChaimMasterUser.Arn
