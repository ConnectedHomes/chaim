---
  AWSTemplateFormatVersion: 2010-09-09
  Parameters: 
    CognitoUserPoolId:
      Type: String
      Description: Chaim Cognito User Pool Id
    ChaimUser:
      Type: String
      Description: Chaim IAM User
    ChaimUserRole:
      Type: String
      Description: Chaim IAM User Role
    ChaimRole:
      Type: String
      Description: Chaim Lambda RDS Role
    ChaimKMSKey:
      Type: String
      Description: Chaim KMS Key
  Resources:
    ChaimMasterUser:
      Type: AWS::IAM::User
      Properties:
        UserName: !Ref ChaimUser
        ManagedPolicyArns:
          - !Ref ChaimManageAccessKey
          - !Ref STSAssumeRole
        Tags:
          - Key: Name
            Value: !Ref ChaimUser
          - Key: Role
            Value: !Ref ChaimUserRole
      DependsOn: 
        - ChaimManageAccessKey
        - STSAssumeRole
    ChaimLambdaRDSRole:
      Type: AWS::IAM::Role
      Properties:
        Description: "Chaim Access to IAM, Parameter Store, Cognito and RDS"
        RoleName: !Ref ChaimRole
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
        ManagedPolicyArns:
          - !Ref ChaimPublishToSNS
          - !Ref CognitoGetUserStatus
          - !Ref CognitoManageUserPool
          - !Ref ParamStoreRead
          - !Ref STSAssumeRole
        Tags:
          - Key: Name
            Value: !Ref ChaimRole
      DependsOn:
        - ChaimPublishToSNS
        - CognitoGetUserStatus
        - CognitoManageUserPool
        - ParamStoreRead
        - STSAssumeRole
    ChaimCognitoManageUser:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: ChaimCognitoManageUser
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            Sid: ChaimCognitoManageUser0
            Effect: Allow
            Action:
              - cognito-idp:AdminDeleteUser
              - cognito-idp:AdminEnableUser
              - cognito-idp:AdminCreateUser
              - cognito-idp:AdminDisableUser
              - cognito-idp:AdminGetUser
              - cognito-idp:ListUser
            Resource:
                - !Ref CognitoUserPoolId
    ChaimManageAccessKey:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: ChaimManageAccessKey
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            Sid: ChaimManageAccessKey0
            Effect: Allow
            Action:
              - iam:DeleteAccessKey
              - iam:GetAccessKeyLastUsed
              - iam:UpdateAccessKey
              - iam:GetUser
              - iam:CreateAccessKey
              - iam:ListAccessKeys
            Resource:
              !Sub
                - "arn:aws:iam::${AWS::AccountId}:user/${User}"
                - { User: !Ref ChaimUser }
    ChaimParameterstoreWrite:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: ChaimParameterstoreWrite
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            Sid: ChaimParameterstoreWrite0
            Effect: Allow
            Action:
              - ssm:PutParameter
              - kms:Decrypt
              - kms:Encrypt
              - ssm:GetParametersByPath
              - ssm:GetParameters
              - ssm:GetParameter
            Resource:
              - !Sub
                - "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${Key}"
                - { Key: !Ref KeyId }
              - !Sub
                - "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/sre/chaim/*"
            Sid: ChaimParameterstoreWrite1
            Effect: Allow
            Action: ssm:DescribeParameters
            Resource: "*"
    ChaimPublishToSNS:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: ChaimPublishToSNS
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            Sid: ChaimPublishToSNS0
            Effect: Allow
            Action: sns:Publish
            Resource:
              - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:chaim-slack-helper"
              - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:ChaimSlackBeta"
              - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:ChaimSlackProd"
              - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:sre-honeypass"
              - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:sre-honeyhub"
              - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:sre-hc-pw-reset"
    CognitoGetUserStatus:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: CognitoGetUserStatus
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            Sid: CognitoGetUserStatus0
            Effect: Allow
            Action:
              - cognito-idp:AdminGetUser
              - cognito-idp:List*
            Resource:
                - !Ref CognitoUserPoolId
    CognitoManageUserPool:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: CognitoManageUserPool
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            Sid: CognitoManageUserPool0
            Effect: Allow
            Action:
              - cognito-idp:ListUsersInGroup
              - cognito-idp:ListGroups
              - cognito-idp:AdminListDevices
              - cognito-idp:AdminCreateUser
              - cognito-idp:ListDevices
              - cognito-idp:AdminDisableUser
              - cognito-idp:AdminListGroupsForUser
              - cognito-idp:AdminGetUser
              - cognito-idp:ListUserPoolClients
              - cognito-idp:ListUserImportJobs
            Resource:
                - !Ref CognitoUserPoolId
    ParamStoreRead:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: ParamStoreRead
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            Sid: ParamStoreRead0
            Effect: Allow
            Action: kms:Decrypt
            Resource: 
              !Sub
                - "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${Key}"
                - { Key:  !Ref ChaimKMSKey }
            Sid: ParamStoreRead1
            Effect: Allow
            Action:
              - ssm:DescribeParameters",
              - ssm:GetParametersByPath",
              - ssm:GetParameters",
              - ssm:GetParameter"
            Resource: "*"
    STSAssumeRole:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: STSAssumeRole
        PolicyDocument:
          Version: 2012-10-17
          Statement:
              Sid: STSAssumeRole0
              Effect: Allow
              Action:
                - sts:GetSessionToken
                - sts:AssumeRole
              Resource: "*"
